# =========================================================================
# Anomaly Detection Engine Configuration
# =========================================================================
# This file controls all operational parameters of the engine.
# Settings can be reloaded live by sending a SIGHUP signal to the process.

# --- Core I/O and General Settings ---


# Where to read logs from. Use "stdin" to process from standard input.
log_input_path = ./data/fake.log
# Path to a file containing one IP address or CIDR range per line to ignore.
allowlist_path = ./data/allowlist.txt
# If true, prints alerts in a human-readable format to the console.
alerts_to_stdout = true
# If true, writes alerts in JSON format to the file specified below.
alerts_to_file = true
alert_output_path = ./data/alerts_log.json


# --- Alert Throttling ---
# To prevent alert fatigue, the engine can suppress duplicate alerts.
# An alert is a "duplicate" if it has the same source IP and reason.
# Time (in seconds) to suppress a duplicate alert after it's first seen.
alert_throttle_duration_seconds = 300
# A duplicate alert WILL be shown if this many other unique alerts have
# occurred since, even if the time window hasn't passed. (0 = no limit)
alert_throttle_max_alerts = 10


# --- State Management ---
# The engine can save its learned baselines to a file to survive restarts.
state_persistence_enabled = true
state_file_path = data/engine_state.dat
state_save_interval_events = 50000
# If true, the engine will periodically remove old, inactive state objects.
state_pruning_enabled = true
# Time (in seconds) an IP or Path must be inactive before being pruned. (7 days)
state_ttl_seconds = 604800
state_prune_interval_events = 100000


# --- Live File Monitoring ---
# If true and `log_input_path` is a file, the engine will "tail" the file
# for new lines after reaching the end, instead of exiting.
live_monitoring_enabled = false
live_monitoring_sleep_seconds = 5


# --- Machine Learning Data Collection ---
# For development: if true, all generated feature vectors will be saved
# to a CSV file, perfect for training a new model.
ml_data_collection_enabled = false
ml_data_collection_path = "data/training_features.csv"


# =========================================================================
# Tier 1: Heuristic & Rule-Based Detection
# Fast, simple checks for obvious threats.
# =========================================================================
[Tier1]
enabled = true

# --- Window-Based Rules ---
# The duration (in seconds) for short-term checks like request rates.
sliding_window_duration_seconds = 60
max_requests_per_ip_in_window = 1000
max_failed_logins_per_ip = 50
failed_login_status_codes = 401,403

# --- User-Agent Anomaly Detection ---
check_user_agent_anomalies = true
min_chrome_version = 90
min_firefox_version = 85
max_unique_uas_per_ip_in_window = 3

# --- String/Pattern Matching ---
# Comma-separated lists of substrings to search for.
suspicious_path_substrings = ../,/etc/passwd,sqlmap,xss,script
suspicious_ua_substrings = Nmap,sqlmap,nikto,curl/
# Paths that are sensitive, especially when accessed by a newly seen IP.
sensitive_path_substrings = admin,config,backup,.env,login,wp-admin,wp-login

# --- Session Tracking ---
# A "session" is a series of requests from a unique combination of components.
session_tracking_enabled = true
# Defines a unique session. Can be any combination of "ip", "ua".
session_key_components = ip,ua
session_inactivity_ttl_seconds = 1800
max_failed_logins_per_session = 10
max_requests_per_session_in_window = 30
max_ua_changes_per_session = 2

# --- Content-Type Ratio Rules (for detecting scraping) ---
# Defines which requests are considered "HTML pages" vs "assets".
html_path_suffixes = .html,.htm,.php,.jsp
html_exact_paths = /
asset_path_prefixes = /static/,/assets/,/public/,/media/,/api/
asset_path_suffixes = .css,.js,.png,.jpg,.jpeg,.gif,.svg,.woff2,.ico
# How many HTML pages an IP must request before the ratio check is performed.
min_html_requests_for_ratio_check = 5
# Alert if (assets / html_pages) is below this ratio. Bots often don't fetch assets.
min_assets_per_html_ratio = 10.0


# =========================================================================
# Tier 2: Statistical Anomaly Detection
# Identifies deviations from learned baselines.
# =========================================================================
[Tier2]
enabled = true
# An event's Z-score must be above this to be considered anomalous.
z_score_threshold = 3.5
# How many data points are needed before Z-scores are calculated for an IP/path.
min_samples_for_z_score = 30
# A simpler check: alert if a value is this many times its historical average.
historical_deviation_factor = 3.0


# =========================================================================
# Tier 3: Machine Learning Detection
# Finds complex, multi-variate anomalies.
# =========================================================================
[Tier3]
enabled = false
# Path to the ONNX model file for inference.
model_path = src/models/isolation_forest.onnx
# The model's output score must be above this threshold to trigger an alert.
anomaly_score_threshold = 0.6
# Path to the JSON file containing model metadata (e.g., feature names).
model_metadata_path = "src/models/isolation_forest.json"
# If true, the engine will periodically run the training script and hot-swap the model.
automated_retraining_enabled = false
retraining_interval_seconds = 86400
training_script_path = "ml/train.py"


# =========================================================================
# Alerting: Where to send alerts.
# =========================================================================
[Alerting]
file_enabled = true
syslog_enabled = true
http_enabled = false
# The full URL for the HTTP webhook (e.g., for Slack, a SIEM, or a custom API).
; http_webhook_url = https://your-siem-or-slack-webhook.com/alerts


# =========================================================================
# Threat Intelligence: External Blacklists
# =========================================================================
[ThreatIntel]
enabled = true
# How often (in seconds) to re-download the feeds. (1 hour)
update_interval_seconds = 3600
# Comma-separated list of URLs pointing to plaintext IP blocklists.
feed_urls = https://raw.githubusercontent.com/firehol/blocklist-ipsets/refs/heads/master/firehol_level1.netset


[MongoLogSource]
# Settings used only if log_source_type is "mongodb"
uri = "mongodb://localhost:27017"
database = "log"
collection = "access"
# The BSON field name in the log collection that contains the event timestamp.
# The engine will query based on this field.
timestamp_field_name = "timestamp"