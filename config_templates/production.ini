# =========================================================================
# Production Configuration Template
# =========================================================================
# This configuration is optimized for production environments with:
# - High performance and reliability
# - Conservative error handling
# - Production-grade security settings
# - Optimized resource utilization
# =========================================================================

# Basic application settings
log_source_type = "mongodb"
log_input_path = "/var/log/anomaly_detector/input.log"
reader_state_path = "/var/lib/anomaly_detector/reader_state.dat"
allowlist_path = "/etc/anomaly_detector/allowlist.txt"
alerts_to_stdout = false
alerts_to_file = true
alert_output_path = "/var/log/anomaly_detector/alerts.json"

# Production alert settings
alert_throttle_duration_seconds = 300
alert_throttle_max_alerts = 10

# State management for production
state_persistence_enabled = true
state_file_path = "/var/lib/anomaly_detector/engine_state.dat"
state_save_interval_events = 50000
state_pruning_enabled = true
state_ttl_seconds = 604800            # 7 days
state_prune_interval_events = 100000

# Production monitoring
live_monitoring_enabled = false
live_monitoring_sleep_seconds = 30

# ML data collection disabled for production
ml_data_collection_enabled = false

[Tier1]
enabled = true
# Production thresholds
max_requests_per_ip_in_window = 200
max_failed_logins_per_ip_in_window = 10
# Conservative scoring for production
score_missing_ua = 5.0
score_outdated_browser = 10.0
score_known_bad_ua = 75.0
score_headless_browser = 40.0
score_ua_cycling = 85.0
score_suspicious_path = 95.0
score_sensitive_path_new_ip = 80.0

[Tier2]
enabled = true
z_score_threshold = 3.5
min_samples_for_z_score = 30

[Tier3]
enabled = true
model_path = "/usr/share/anomaly_detector/models/isolation_forest.onnx"
anomaly_score_threshold = 0.6
automated_retraining_enabled = false  # Manual control in production

[Alerting]
file_enabled = true
syslog_enabled = true                 # Enable for production
http_enabled = true
http_webhook_url = "https://alerts.company.com/webhooks/anomaly_detector"

[ThreatIntel]
enabled = true
feed_urls = [
    "https://raw.githubusercontent.com/firehol/blocklist-ipsets/master/firehol_level1.netset"
]
update_interval_seconds = 3600

[MongoLogSource]
uri = "mongodb://prod-mongo-01:27017,prod-mongo-02:27017,prod-mongo-03:27017/?replicaSet=rs0"
database = "logs"
collection = "access"
timestamp_field_name = "timestamp"

[Logging]
# Production logging
console_enabled = false              # No console logging in production
file_enabled = true
file_path = "/var/log/anomaly_detector/anomaly_detector.log"
max_file_size_mb = 100
max_files = 10
log_level = "INFO"                   # Info level for production
json_format = true                   # Structured logging for production
enable_function_logging = false     # Disabled for performance
enable_performance_logging = true
enable_memory_logging = true

[Monitoring]
enable_deep_timing = false           # Disabled for production performance
web_server_host = "0.0.0.0"
web_server_port = 9091

[Prometheus]
enabled = true
host = "0.0.0.0"
port = 9090
metrics_path = "/metrics"
health_path = "/health"
scrape_interval_seconds = 15
replace_web_server = true            # Replace web server in production
max_metrics_age_seconds = 300

[DynamicLearning]
enabled = true
learning_window_hours = 24
confidence_threshold = 0.95
min_samples_for_learning = 100
seasonal_detection_sensitivity = 0.8
baseline_update_interval_seconds = 300
enable_manual_overrides = false     # Disabled for production stability
threshold_change_max_percent = 50.0

[Tier4]
enabled = true
prometheus_url = "http://prometheus.internal:9090"
query_timeout_seconds = 30
evaluation_interval_seconds = 60
max_concurrent_queries = 10
enable_circuit_breaker = true
circuit_breaker_failure_threshold = 5
circuit_breaker_recovery_timeout_seconds = 60

[MemoryManagement]
enabled = true
max_memory_usage_mb = 2048           # Higher limit for production
memory_pressure_threshold_mb = 1600
enable_object_pooling = true
eviction_check_interval_seconds = 60
eviction_threshold_percent = 80.0
enable_memory_compaction = true
state_object_ttl_seconds = 3600

[PerformanceMonitoring]
enabled = true
enable_profiling = false             # Disabled for production performance
enable_load_shedding = true

# Metrics collection settings
metrics_collection_interval_ms = 1000
max_latency_samples_per_component = 10000

# Production performance thresholds
max_cpu_usage_percent = 80.0
max_memory_usage_bytes = 2147483648  # 2GB
max_queue_depth = 20000
max_avg_latency_ms = 500             # Stricter latency requirements
max_error_rate_percent = 2.0         # Lower error tolerance

# Load shedding configuration
moderate_load_shed_percentage = 10.0
high_load_shed_percentage = 25.0
critical_load_shed_percentage = 50.0

monitoring_loop_interval_seconds = 5

# Minimal profiling for production
enable_function_profiling = false
max_profile_samples_per_function = 1000
profile_report_interval_seconds = 600

# Performance reporting
enable_performance_reports = true
performance_report_path = "/var/log/anomaly_detector/performance_report.csv"
performance_report_interval_seconds = 60

[ErrorHandling]
enabled = true

# Conservative circuit breaker for production
enable_circuit_breaker = true
circuit_breaker_failure_threshold = 5
circuit_breaker_timeout_ms = 5000
circuit_breaker_recovery_timeout_ms = 30000

# Conservative retry policy
enable_error_recovery = true
max_retry_attempts = 3
initial_retry_delay_ms = 100
max_retry_delay_ms = 5000
retry_backoff_multiplier = 2.0

# Production graceful degradation
enable_graceful_degradation = true
cpu_threshold_for_degradation = 85.0
memory_threshold_for_degradation_mb = 1800
queue_depth_threshold_for_degradation = 25000
error_rate_threshold_for_degradation = 5.0

# Production recovery strategies
default_recovery_strategy = "RETRY"
prometheus_recovery_strategy = "CIRCUIT_BREAK"
database_recovery_strategy = "RETRY"
file_io_recovery_strategy = "FALLBACK"
network_recovery_strategy = "CIRCUIT_BREAK"

# Error rate limiting for production
enable_error_rate_limiting = true
max_errors_per_minute = 100
error_burst_limit = 10

# Production recovery monitoring
recovery_statistics_interval_seconds = 60
log_recovery_attempts = false        # Disabled to reduce noise
recovery_log_level = "WARN"          # Only warnings and errors
